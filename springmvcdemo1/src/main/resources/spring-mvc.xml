<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
  <!-- 配置扫描的Controller -->
  <context:component-scan base-package="com.caihao.springmvcdemo.controller"/>
  <!--配置扫描service包下注解，应该可以直接扫描整个项目-->
  <context:component-scan base-package="com.caihao.springmvcdemo.service.*"/>

  <!--这样扫描mapper层是不对的-->
  <!--<context:component-scan base-package="com.caihao.springmvcdemo.mapper"/>-->
  <!--mapper层扫描-->
  <bean id="scannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.caihao.springmvcdemo.mapper"/>
  </bean>

  <!-- 静态资源访问，例如图片、js文件、css文件等 -->
  <mvc:default-servlet-handler/>

  <!-- 开启注解 -->
  <mvc:annotation-driven/>

  <!-- jspViewResolver jsp视图解析器 -->
  <bean id="jspViewResolver"
    class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    <!--<property name="prefix" value="/page/"/>&lt;!&ndash; 后台默认返回视图寻找视图文件的路径 &ndash;&gt;-->
    <property name="prefix" value="/"/><!-- 后台默认返回视图寻找视图文件的路径 -->
    <!--<property name="suffix" value=".jsp"/>&lt;!&ndash; 后台返回视图默认添加的后缀 &ndash;&gt;-->
  </bean>

  <!-- 配置C3P0连接池,目的：管理数据库连接 -->
  <!--<bean id="comboPooledDataSourceID" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
  <!--<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"/>-->
  <!--<property name="jdbcUrl" value="jdbc:oracle:thin:@127.0.0.1:1521:orcl"/>-->
  <!--<property name="user" value="scott"/>-->
  <!--<property name="password" value="tiger"/>-->
  <!--</bean>-->
  <!-- 配置SqlSessionFactoryBean，目的：加载mybaits配置文件和映射文件，即替代原Mybatis工具类的作用 -->
  <!--<bean id="sqlSessionFactoryBeanID" class="org.mybatis.spring.SqlSessionFactoryBean">-->
  <!--<property name="mapperLocations">-->
  <!--<list>-->
  <!--<value>classpath:mapper/*.xml</value>-->
  <!--</list>-->
  <!--</property>-->
  <!--<property name="dataSource" ref="comboPooledDataSourceID"/>-->
  <!--</bean>-->

  <!--配置数据源-->
  <bean id="dataSourceId" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:ORCL"/>
    <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
    <property name="username" value="scott"/>
    <property name="password" value="tiger"/>
  </bean>

  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSourceId"/>
    <property name="mapperLocations">
      <list>
        <value>classpath:mapper/*.xml</value>
      </list>
    </property>
    <property name="typeAliasesPackage" value="com.caihao.springmvcdemo.entity"/>
    <property name="configuration">
      <bean class="org.apache.ibatis.session.Configuration">
        <property name="mapUnderscoreToCamelCase" value="true"/>
      </bean>
    </property>
    <property name="plugins">
      <list>
        <bean class="com.github.pagehelper.PageInterceptor">
          <!-- 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 -->
          <!--<property name="properties">-->
          <!--<value>-->
          <!--helperDialect=mysql-->
          <!--reasonable=true-->
          <!--supportMethodsArguments=true-->
          <!--returnPageInfo=check-->
          <!--params=count=countSql-->
          <!--</value>-->
          <!--</property>-->
        </bean>
      </list>
    </property>
  </bean>
</beans>